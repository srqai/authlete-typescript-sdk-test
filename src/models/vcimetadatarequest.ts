/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type VciMetadataRequest = {
  /**
   * The flag indicating whether the metadata is written in the pretty
   *
   * @remarks
   * format or not.
   */
  pretty: boolean;
};

/** @internal */
export const VciMetadataRequest$inboundSchema: z.ZodType<
  VciMetadataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pretty: z.boolean(),
});

/** @internal */
export type VciMetadataRequest$Outbound = {
  pretty: boolean;
};

/** @internal */
export const VciMetadataRequest$outboundSchema: z.ZodType<
  VciMetadataRequest$Outbound,
  z.ZodTypeDef,
  VciMetadataRequest
> = z.object({
  pretty: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciMetadataRequest$ {
  /** @deprecated use `VciMetadataRequest$inboundSchema` instead. */
  export const inboundSchema = VciMetadataRequest$inboundSchema;
  /** @deprecated use `VciMetadataRequest$outboundSchema` instead. */
  export const outboundSchema = VciMetadataRequest$outboundSchema;
  /** @deprecated use `VciMetadataRequest$Outbound` instead. */
  export type Outbound = VciMetadataRequest$Outbound;
}

export function vciMetadataRequestToJSON(
  vciMetadataRequest: VciMetadataRequest,
): string {
  return JSON.stringify(
    VciMetadataRequest$outboundSchema.parse(vciMetadataRequest),
  );
}

export function vciMetadataRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciMetadataRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciMetadataRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciMetadataRequest' from JSON`,
  );
}
