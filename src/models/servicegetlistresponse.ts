/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Service,
  Service$inboundSchema,
  Service$Outbound,
  Service$outboundSchema,
} from "./service.js";

export type ServiceGetListResponse = {
  /**
   * Start index (inclusive) of the result set. The default value is 0. Must not be a negative
   *
   * @remarks
   * number.
   */
  start?: number | undefined;
  /**
   * Start index (inclusive) of the result set. The default value is 0. Must not be a negative
   *
   * @remarks
   * number.
   */
  end?: number | undefined;
  /**
   * Total number of services owned by the service owner. This doesn't mean the number of services
   *
   * @remarks
   * contained in the response.
   */
  totalCount?: number | undefined;
  /**
   * An array of services.
   *
   * @remarks
   */
  services?: Array<Service> | undefined;
};

/** @internal */
export const ServiceGetListResponse$inboundSchema: z.ZodType<
  ServiceGetListResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  start: z.number().int().optional(),
  end: z.number().int().optional(),
  totalCount: z.number().int().optional(),
  services: z.array(Service$inboundSchema).optional(),
});

/** @internal */
export type ServiceGetListResponse$Outbound = {
  start?: number | undefined;
  end?: number | undefined;
  totalCount?: number | undefined;
  services?: Array<Service$Outbound> | undefined;
};

/** @internal */
export const ServiceGetListResponse$outboundSchema: z.ZodType<
  ServiceGetListResponse$Outbound,
  z.ZodTypeDef,
  ServiceGetListResponse
> = z.object({
  start: z.number().int().optional(),
  end: z.number().int().optional(),
  totalCount: z.number().int().optional(),
  services: z.array(Service$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ServiceGetListResponse$ {
  /** @deprecated use `ServiceGetListResponse$inboundSchema` instead. */
  export const inboundSchema = ServiceGetListResponse$inboundSchema;
  /** @deprecated use `ServiceGetListResponse$outboundSchema` instead. */
  export const outboundSchema = ServiceGetListResponse$outboundSchema;
  /** @deprecated use `ServiceGetListResponse$Outbound` instead. */
  export type Outbound = ServiceGetListResponse$Outbound;
}

export function serviceGetListResponseToJSON(
  serviceGetListResponse: ServiceGetListResponse,
): string {
  return JSON.stringify(
    ServiceGetListResponse$outboundSchema.parse(serviceGetListResponse),
  );
}

export function serviceGetListResponseFromJSON(
  jsonString: string,
): SafeParseResult<ServiceGetListResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ServiceGetListResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ServiceGetListResponse' from JSON`,
  );
}
