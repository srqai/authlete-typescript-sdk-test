/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

/**
 * The next action that the authorization server implementation should take.
 *
 * @remarks
 */
export const ClientRegistrationResponseAction = {
  BadRequest: "BAD_REQUEST",
  Created: "CREATED",
  Deleted: "DELETED",
  InternalServerError: "INTERNAL_SERVER_ERROR",
  Ok: "OK",
  Unauthorized: "UNAUTHORIZED",
  Updated: "UPDATED",
} as const;
/**
 * The next action that the authorization server implementation should take.
 *
 * @remarks
 */
export type ClientRegistrationResponseAction = ClosedEnum<
  typeof ClientRegistrationResponseAction
>;

/** @internal */
export const ClientRegistrationResponseAction$inboundSchema: z.ZodNativeEnum<
  typeof ClientRegistrationResponseAction
> = z.nativeEnum(ClientRegistrationResponseAction);

/** @internal */
export const ClientRegistrationResponseAction$outboundSchema: z.ZodNativeEnum<
  typeof ClientRegistrationResponseAction
> = ClientRegistrationResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientRegistrationResponseAction$ {
  /** @deprecated use `ClientRegistrationResponseAction$inboundSchema` instead. */
  export const inboundSchema = ClientRegistrationResponseAction$inboundSchema;
  /** @deprecated use `ClientRegistrationResponseAction$outboundSchema` instead. */
  export const outboundSchema = ClientRegistrationResponseAction$outboundSchema;
}
