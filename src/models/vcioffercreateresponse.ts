/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  CredentialOfferInfo,
  CredentialOfferInfo$inboundSchema,
  CredentialOfferInfo$Outbound,
  CredentialOfferInfo$outboundSchema,
} from "./credentialofferinfo.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * The result of the `/vci/offer/create` API call.
 */
export const VciOfferCreateResponseAction = {
  Created: "CREATED",
  Forbidden: "FORBIDDEN",
  CallerError: "CALLER_ERROR",
  AuthleteError: "AUTHLETE_ERROR",
} as const;
/**
 * The result of the `/vci/offer/create` API call.
 */
export type VciOfferCreateResponseAction = ClosedEnum<
  typeof VciOfferCreateResponseAction
>;

export type VciOfferCreateResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * The result of the `/vci/offer/create` API call.
   */
  action?: VciOfferCreateResponseAction | undefined;
  info?: CredentialOfferInfo | undefined;
};

/** @internal */
export const VciOfferCreateResponseAction$inboundSchema: z.ZodNativeEnum<
  typeof VciOfferCreateResponseAction
> = z.nativeEnum(VciOfferCreateResponseAction);

/** @internal */
export const VciOfferCreateResponseAction$outboundSchema: z.ZodNativeEnum<
  typeof VciOfferCreateResponseAction
> = VciOfferCreateResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateResponseAction$ {
  /** @deprecated use `VciOfferCreateResponseAction$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateResponseAction$inboundSchema;
  /** @deprecated use `VciOfferCreateResponseAction$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateResponseAction$outboundSchema;
}

/** @internal */
export const VciOfferCreateResponse$inboundSchema: z.ZodType<
  VciOfferCreateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferCreateResponseAction$inboundSchema.optional(),
  info: CredentialOfferInfo$inboundSchema.optional(),
});

/** @internal */
export type VciOfferCreateResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  info?: CredentialOfferInfo$Outbound | undefined;
};

/** @internal */
export const VciOfferCreateResponse$outboundSchema: z.ZodType<
  VciOfferCreateResponse$Outbound,
  z.ZodTypeDef,
  VciOfferCreateResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferCreateResponseAction$outboundSchema.optional(),
  info: CredentialOfferInfo$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateResponse$ {
  /** @deprecated use `VciOfferCreateResponse$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateResponse$inboundSchema;
  /** @deprecated use `VciOfferCreateResponse$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateResponse$outboundSchema;
  /** @deprecated use `VciOfferCreateResponse$Outbound` instead. */
  export type Outbound = VciOfferCreateResponse$Outbound;
}

export function vciOfferCreateResponseToJSON(
  vciOfferCreateResponse: VciOfferCreateResponse,
): string {
  return JSON.stringify(
    VciOfferCreateResponse$outboundSchema.parse(vciOfferCreateResponse),
  );
}

export function vciOfferCreateResponseFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateResponse' from JSON`,
  );
}
