/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CredentialIssuanceOrder = {
  /**
   * The identifier of a credential request.
   */
  requestIdentifier?: string | undefined;
  /**
   * The additional payload that will be added into a credential to be issued.
   */
  credentialPayload?: string | undefined;
  /**
   * The flag indicating whether to defer credential issuance.
   */
  issuanceDeferred?: boolean | undefined;
  /**
   * The duration of a credential to be issued.
   */
  credentialDuration?: number | undefined;
  /**
   * The key ID of a private key that should be used for signing a credential
   *
   * @remarks
   * to be issued.
   */
  signingKeyId?: string | undefined;
};

/** @internal */
export const CredentialIssuanceOrder$inboundSchema: z.ZodType<
  CredentialIssuanceOrder,
  z.ZodTypeDef,
  unknown
> = z.object({
  requestIdentifier: z.string().optional(),
  credentialPayload: z.string().optional(),
  issuanceDeferred: z.boolean().optional(),
  credentialDuration: z.number().int().optional(),
  signingKeyId: z.string().optional(),
});

/** @internal */
export type CredentialIssuanceOrder$Outbound = {
  requestIdentifier?: string | undefined;
  credentialPayload?: string | undefined;
  issuanceDeferred?: boolean | undefined;
  credentialDuration?: number | undefined;
  signingKeyId?: string | undefined;
};

/** @internal */
export const CredentialIssuanceOrder$outboundSchema: z.ZodType<
  CredentialIssuanceOrder$Outbound,
  z.ZodTypeDef,
  CredentialIssuanceOrder
> = z.object({
  requestIdentifier: z.string().optional(),
  credentialPayload: z.string().optional(),
  issuanceDeferred: z.boolean().optional(),
  credentialDuration: z.number().int().optional(),
  signingKeyId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CredentialIssuanceOrder$ {
  /** @deprecated use `CredentialIssuanceOrder$inboundSchema` instead. */
  export const inboundSchema = CredentialIssuanceOrder$inboundSchema;
  /** @deprecated use `CredentialIssuanceOrder$outboundSchema` instead. */
  export const outboundSchema = CredentialIssuanceOrder$outboundSchema;
  /** @deprecated use `CredentialIssuanceOrder$Outbound` instead. */
  export type Outbound = CredentialIssuanceOrder$Outbound;
}

export function credentialIssuanceOrderToJSON(
  credentialIssuanceOrder: CredentialIssuanceOrder,
): string {
  return JSON.stringify(
    CredentialIssuanceOrder$outboundSchema.parse(credentialIssuanceOrder),
  );
}

export function credentialIssuanceOrderFromJSON(
  jsonString: string,
): SafeParseResult<CredentialIssuanceOrder, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CredentialIssuanceOrder$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CredentialIssuanceOrder' from JSON`,
  );
}
