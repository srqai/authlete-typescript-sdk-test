/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type AuthTokenCreateApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  tokenCreateRequest: models.TokenCreateRequest;
};

/** @internal */
export const AuthTokenCreateApiRequest$inboundSchema: z.ZodType<
  AuthTokenCreateApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  token_create_request: models.TokenCreateRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "token_create_request": "tokenCreateRequest",
  });
});

/** @internal */
export type AuthTokenCreateApiRequest$Outbound = {
  serviceId: string;
  token_create_request: models.TokenCreateRequest$Outbound;
};

/** @internal */
export const AuthTokenCreateApiRequest$outboundSchema: z.ZodType<
  AuthTokenCreateApiRequest$Outbound,
  z.ZodTypeDef,
  AuthTokenCreateApiRequest
> = z.object({
  serviceId: z.string(),
  tokenCreateRequest: models.TokenCreateRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    tokenCreateRequest: "token_create_request",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthTokenCreateApiRequest$ {
  /** @deprecated use `AuthTokenCreateApiRequest$inboundSchema` instead. */
  export const inboundSchema = AuthTokenCreateApiRequest$inboundSchema;
  /** @deprecated use `AuthTokenCreateApiRequest$outboundSchema` instead. */
  export const outboundSchema = AuthTokenCreateApiRequest$outboundSchema;
  /** @deprecated use `AuthTokenCreateApiRequest$Outbound` instead. */
  export type Outbound = AuthTokenCreateApiRequest$Outbound;
}

export function authTokenCreateApiRequestToJSON(
  authTokenCreateApiRequest: AuthTokenCreateApiRequest,
): string {
  return JSON.stringify(
    AuthTokenCreateApiRequest$outboundSchema.parse(authTokenCreateApiRequest),
  );
}

export function authTokenCreateApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<AuthTokenCreateApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AuthTokenCreateApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AuthTokenCreateApiRequest' from JSON`,
  );
}
