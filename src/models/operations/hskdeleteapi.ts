/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HskDeleteApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  handle: string;
};

/** @internal */
export const HskDeleteApiRequest$inboundSchema: z.ZodType<
  HskDeleteApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  handle: z.string(),
});

/** @internal */
export type HskDeleteApiRequest$Outbound = {
  serviceId: string;
  handle: string;
};

/** @internal */
export const HskDeleteApiRequest$outboundSchema: z.ZodType<
  HskDeleteApiRequest$Outbound,
  z.ZodTypeDef,
  HskDeleteApiRequest
> = z.object({
  serviceId: z.string(),
  handle: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskDeleteApiRequest$ {
  /** @deprecated use `HskDeleteApiRequest$inboundSchema` instead. */
  export const inboundSchema = HskDeleteApiRequest$inboundSchema;
  /** @deprecated use `HskDeleteApiRequest$outboundSchema` instead. */
  export const outboundSchema = HskDeleteApiRequest$outboundSchema;
  /** @deprecated use `HskDeleteApiRequest$Outbound` instead. */
  export type Outbound = HskDeleteApiRequest$Outbound;
}

export function hskDeleteApiRequestToJSON(
  hskDeleteApiRequest: HskDeleteApiRequest,
): string {
  return JSON.stringify(
    HskDeleteApiRequest$outboundSchema.parse(hskDeleteApiRequest),
  );
}

export function hskDeleteApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<HskDeleteApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HskDeleteApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HskDeleteApiRequest' from JSON`,
  );
}
