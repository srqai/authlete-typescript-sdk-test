/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type ClientFlagUpdateApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  /**
   * A client ID.
   */
  clientIdentifier: string;
  clientFlagUpdateRequest?: models.ClientFlagUpdateRequest | undefined;
};

/** @internal */
export const ClientFlagUpdateApiRequest$inboundSchema: z.ZodType<
  ClientFlagUpdateApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  clientIdentifier: z.string(),
  client_flag_update_request: models.ClientFlagUpdateRequest$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "client_flag_update_request": "clientFlagUpdateRequest",
  });
});

/** @internal */
export type ClientFlagUpdateApiRequest$Outbound = {
  serviceId: string;
  clientIdentifier: string;
  client_flag_update_request?:
    | models.ClientFlagUpdateRequest$Outbound
    | undefined;
};

/** @internal */
export const ClientFlagUpdateApiRequest$outboundSchema: z.ZodType<
  ClientFlagUpdateApiRequest$Outbound,
  z.ZodTypeDef,
  ClientFlagUpdateApiRequest
> = z.object({
  serviceId: z.string(),
  clientIdentifier: z.string(),
  clientFlagUpdateRequest: models.ClientFlagUpdateRequest$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    clientFlagUpdateRequest: "client_flag_update_request",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientFlagUpdateApiRequest$ {
  /** @deprecated use `ClientFlagUpdateApiRequest$inboundSchema` instead. */
  export const inboundSchema = ClientFlagUpdateApiRequest$inboundSchema;
  /** @deprecated use `ClientFlagUpdateApiRequest$outboundSchema` instead. */
  export const outboundSchema = ClientFlagUpdateApiRequest$outboundSchema;
  /** @deprecated use `ClientFlagUpdateApiRequest$Outbound` instead. */
  export type Outbound = ClientFlagUpdateApiRequest$Outbound;
}

export function clientFlagUpdateApiRequestToJSON(
  clientFlagUpdateApiRequest: ClientFlagUpdateApiRequest,
): string {
  return JSON.stringify(
    ClientFlagUpdateApiRequest$outboundSchema.parse(clientFlagUpdateApiRequest),
  );
}

export function clientFlagUpdateApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<ClientFlagUpdateApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClientFlagUpdateApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientFlagUpdateApiRequest' from JSON`,
  );
}
