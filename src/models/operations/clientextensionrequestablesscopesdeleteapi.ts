/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ClientExtensionRequestablesScopesDeleteApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  /**
   * A client ID.
   *
   * @remarks
   */
  clientId: string;
};

/** @internal */
export const ClientExtensionRequestablesScopesDeleteApiRequest$inboundSchema:
  z.ZodType<
    ClientExtensionRequestablesScopesDeleteApiRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    serviceId: z.string(),
    clientId: z.string(),
  });

/** @internal */
export type ClientExtensionRequestablesScopesDeleteApiRequest$Outbound = {
  serviceId: string;
  clientId: string;
};

/** @internal */
export const ClientExtensionRequestablesScopesDeleteApiRequest$outboundSchema:
  z.ZodType<
    ClientExtensionRequestablesScopesDeleteApiRequest$Outbound,
    z.ZodTypeDef,
    ClientExtensionRequestablesScopesDeleteApiRequest
  > = z.object({
    serviceId: z.string(),
    clientId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientExtensionRequestablesScopesDeleteApiRequest$ {
  /** @deprecated use `ClientExtensionRequestablesScopesDeleteApiRequest$inboundSchema` instead. */
  export const inboundSchema =
    ClientExtensionRequestablesScopesDeleteApiRequest$inboundSchema;
  /** @deprecated use `ClientExtensionRequestablesScopesDeleteApiRequest$outboundSchema` instead. */
  export const outboundSchema =
    ClientExtensionRequestablesScopesDeleteApiRequest$outboundSchema;
  /** @deprecated use `ClientExtensionRequestablesScopesDeleteApiRequest$Outbound` instead. */
  export type Outbound =
    ClientExtensionRequestablesScopesDeleteApiRequest$Outbound;
}

export function clientExtensionRequestablesScopesDeleteApiRequestToJSON(
  clientExtensionRequestablesScopesDeleteApiRequest:
    ClientExtensionRequestablesScopesDeleteApiRequest,
): string {
  return JSON.stringify(
    ClientExtensionRequestablesScopesDeleteApiRequest$outboundSchema.parse(
      clientExtensionRequestablesScopesDeleteApiRequest,
    ),
  );
}

export function clientExtensionRequestablesScopesDeleteApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ClientExtensionRequestablesScopesDeleteApiRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ClientExtensionRequestablesScopesDeleteApiRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ClientExtensionRequestablesScopesDeleteApiRequest' from JSON`,
  );
}
