/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type ClientExtensionRequestablesScopesUpdateApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  /**
   * A client ID.
   *
   * @remarks
   */
  clientId: string;
  clientExtensionRequestableScopesUpdateRequest:
    models.ClientExtensionRequestableScopesUpdateRequest;
};

/** @internal */
export const ClientExtensionRequestablesScopesUpdateApiRequest$inboundSchema:
  z.ZodType<
    ClientExtensionRequestablesScopesUpdateApiRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    serviceId: z.string(),
    clientId: z.string(),
    client_extension_requestable_scopes_update_request:
      models.ClientExtensionRequestableScopesUpdateRequest$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "client_extension_requestable_scopes_update_request":
        "clientExtensionRequestableScopesUpdateRequest",
    });
  });

/** @internal */
export type ClientExtensionRequestablesScopesUpdateApiRequest$Outbound = {
  serviceId: string;
  clientId: string;
  client_extension_requestable_scopes_update_request:
    models.ClientExtensionRequestableScopesUpdateRequest$Outbound;
};

/** @internal */
export const ClientExtensionRequestablesScopesUpdateApiRequest$outboundSchema:
  z.ZodType<
    ClientExtensionRequestablesScopesUpdateApiRequest$Outbound,
    z.ZodTypeDef,
    ClientExtensionRequestablesScopesUpdateApiRequest
  > = z.object({
    serviceId: z.string(),
    clientId: z.string(),
    clientExtensionRequestableScopesUpdateRequest:
      models.ClientExtensionRequestableScopesUpdateRequest$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      clientExtensionRequestableScopesUpdateRequest:
        "client_extension_requestable_scopes_update_request",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientExtensionRequestablesScopesUpdateApiRequest$ {
  /** @deprecated use `ClientExtensionRequestablesScopesUpdateApiRequest$inboundSchema` instead. */
  export const inboundSchema =
    ClientExtensionRequestablesScopesUpdateApiRequest$inboundSchema;
  /** @deprecated use `ClientExtensionRequestablesScopesUpdateApiRequest$outboundSchema` instead. */
  export const outboundSchema =
    ClientExtensionRequestablesScopesUpdateApiRequest$outboundSchema;
  /** @deprecated use `ClientExtensionRequestablesScopesUpdateApiRequest$Outbound` instead. */
  export type Outbound =
    ClientExtensionRequestablesScopesUpdateApiRequest$Outbound;
}

export function clientExtensionRequestablesScopesUpdateApiRequestToJSON(
  clientExtensionRequestablesScopesUpdateApiRequest:
    ClientExtensionRequestablesScopesUpdateApiRequest,
): string {
  return JSON.stringify(
    ClientExtensionRequestablesScopesUpdateApiRequest$outboundSchema.parse(
      clientExtensionRequestablesScopesUpdateApiRequest,
    ),
  );
}

export function clientExtensionRequestablesScopesUpdateApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ClientExtensionRequestablesScopesUpdateApiRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ClientExtensionRequestablesScopesUpdateApiRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ClientExtensionRequestablesScopesUpdateApiRequest' from JSON`,
  );
}
