/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type NativeSsoApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  nativeSsoRequest: models.NativeSsoRequest;
};

/** @internal */
export const NativeSsoApiRequest$inboundSchema: z.ZodType<
  NativeSsoApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  native_sso_request: models.NativeSsoRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "native_sso_request": "nativeSsoRequest",
  });
});

/** @internal */
export type NativeSsoApiRequest$Outbound = {
  serviceId: string;
  native_sso_request: models.NativeSsoRequest$Outbound;
};

/** @internal */
export const NativeSsoApiRequest$outboundSchema: z.ZodType<
  NativeSsoApiRequest$Outbound,
  z.ZodTypeDef,
  NativeSsoApiRequest
> = z.object({
  serviceId: z.string(),
  nativeSsoRequest: models.NativeSsoRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    nativeSsoRequest: "native_sso_request",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NativeSsoApiRequest$ {
  /** @deprecated use `NativeSsoApiRequest$inboundSchema` instead. */
  export const inboundSchema = NativeSsoApiRequest$inboundSchema;
  /** @deprecated use `NativeSsoApiRequest$outboundSchema` instead. */
  export const outboundSchema = NativeSsoApiRequest$outboundSchema;
  /** @deprecated use `NativeSsoApiRequest$Outbound` instead. */
  export type Outbound = NativeSsoApiRequest$Outbound;
}

export function nativeSsoApiRequestToJSON(
  nativeSsoApiRequest: NativeSsoApiRequest,
): string {
  return JSON.stringify(
    NativeSsoApiRequest$outboundSchema.parse(nativeSsoApiRequest),
  );
}

export function nativeSsoApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<NativeSsoApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NativeSsoApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NativeSsoApiRequest' from JSON`,
  );
}
