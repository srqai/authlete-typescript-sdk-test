/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ServiceGetListApiRequest = {
  /**
   * Start index (inclusive) of the result set. The default value is 0. Must not be a negative number.
   */
  start?: number | undefined;
  /**
   * End index (exclusive) of the result set. The default value is 5. Must not be a negative number.
   */
  end?: number | undefined;
};

/** @internal */
export const ServiceGetListApiRequest$inboundSchema: z.ZodType<
  ServiceGetListApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  start: z.number().int().optional(),
  end: z.number().int().optional(),
});

/** @internal */
export type ServiceGetListApiRequest$Outbound = {
  start?: number | undefined;
  end?: number | undefined;
};

/** @internal */
export const ServiceGetListApiRequest$outboundSchema: z.ZodType<
  ServiceGetListApiRequest$Outbound,
  z.ZodTypeDef,
  ServiceGetListApiRequest
> = z.object({
  start: z.number().int().optional(),
  end: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ServiceGetListApiRequest$ {
  /** @deprecated use `ServiceGetListApiRequest$inboundSchema` instead. */
  export const inboundSchema = ServiceGetListApiRequest$inboundSchema;
  /** @deprecated use `ServiceGetListApiRequest$outboundSchema` instead. */
  export const outboundSchema = ServiceGetListApiRequest$outboundSchema;
  /** @deprecated use `ServiceGetListApiRequest$Outbound` instead. */
  export type Outbound = ServiceGetListApiRequest$Outbound;
}

export function serviceGetListApiRequestToJSON(
  serviceGetListApiRequest: ServiceGetListApiRequest,
): string {
  return JSON.stringify(
    ServiceGetListApiRequest$outboundSchema.parse(serviceGetListApiRequest),
  );
}

export function serviceGetListApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<ServiceGetListApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ServiceGetListApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ServiceGetListApiRequest' from JSON`,
  );
}
