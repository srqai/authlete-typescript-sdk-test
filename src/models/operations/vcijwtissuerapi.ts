/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type VciJwtissuerApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  vciJwtissuerRequest: models.VciJwtissuerRequest;
};

/** @internal */
export const VciJwtissuerApiRequest$inboundSchema: z.ZodType<
  VciJwtissuerApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  vci_jwtissuer_request: models.VciJwtissuerRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "vci_jwtissuer_request": "vciJwtissuerRequest",
  });
});

/** @internal */
export type VciJwtissuerApiRequest$Outbound = {
  serviceId: string;
  vci_jwtissuer_request: models.VciJwtissuerRequest$Outbound;
};

/** @internal */
export const VciJwtissuerApiRequest$outboundSchema: z.ZodType<
  VciJwtissuerApiRequest$Outbound,
  z.ZodTypeDef,
  VciJwtissuerApiRequest
> = z.object({
  serviceId: z.string(),
  vciJwtissuerRequest: models.VciJwtissuerRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    vciJwtissuerRequest: "vci_jwtissuer_request",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciJwtissuerApiRequest$ {
  /** @deprecated use `VciJwtissuerApiRequest$inboundSchema` instead. */
  export const inboundSchema = VciJwtissuerApiRequest$inboundSchema;
  /** @deprecated use `VciJwtissuerApiRequest$outboundSchema` instead. */
  export const outboundSchema = VciJwtissuerApiRequest$outboundSchema;
  /** @deprecated use `VciJwtissuerApiRequest$Outbound` instead. */
  export type Outbound = VciJwtissuerApiRequest$Outbound;
}

export function vciJwtissuerApiRequestToJSON(
  vciJwtissuerApiRequest: VciJwtissuerApiRequest,
): string {
  return JSON.stringify(
    VciJwtissuerApiRequest$outboundSchema.parse(vciJwtissuerApiRequest),
  );
}

export function vciJwtissuerApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciJwtissuerApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciJwtissuerApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciJwtissuerApiRequest' from JSON`,
  );
}
