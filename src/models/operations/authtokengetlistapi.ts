/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AuthTokenGetListApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  /**
   * Client Identifier (client ID or client ID alias).
   *
   * @remarks
   */
  clientIdentifier?: string | undefined;
  /**
   * Unique user ID.
   *
   * @remarks
   */
  subject?: string | undefined;
  /**
   * Start index of search results (inclusive). The default value is 0.
   */
  start?: number | undefined;
  /**
   * End index of search results (exclusive). The default value is 5.
   *
   * @remarks
   */
  end?: number | undefined;
};

/** @internal */
export const AuthTokenGetListApiRequest$inboundSchema: z.ZodType<
  AuthTokenGetListApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  clientIdentifier: z.string().optional(),
  subject: z.string().optional(),
  start: z.number().int().optional(),
  end: z.number().int().optional(),
});

/** @internal */
export type AuthTokenGetListApiRequest$Outbound = {
  serviceId: string;
  clientIdentifier?: string | undefined;
  subject?: string | undefined;
  start?: number | undefined;
  end?: number | undefined;
};

/** @internal */
export const AuthTokenGetListApiRequest$outboundSchema: z.ZodType<
  AuthTokenGetListApiRequest$Outbound,
  z.ZodTypeDef,
  AuthTokenGetListApiRequest
> = z.object({
  serviceId: z.string(),
  clientIdentifier: z.string().optional(),
  subject: z.string().optional(),
  start: z.number().int().optional(),
  end: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthTokenGetListApiRequest$ {
  /** @deprecated use `AuthTokenGetListApiRequest$inboundSchema` instead. */
  export const inboundSchema = AuthTokenGetListApiRequest$inboundSchema;
  /** @deprecated use `AuthTokenGetListApiRequest$outboundSchema` instead. */
  export const outboundSchema = AuthTokenGetListApiRequest$outboundSchema;
  /** @deprecated use `AuthTokenGetListApiRequest$Outbound` instead. */
  export type Outbound = AuthTokenGetListApiRequest$Outbound;
}

export function authTokenGetListApiRequestToJSON(
  authTokenGetListApiRequest: AuthTokenGetListApiRequest,
): string {
  return JSON.stringify(
    AuthTokenGetListApiRequest$outboundSchema.parse(authTokenGetListApiRequest),
  );
}

export function authTokenGetListApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<AuthTokenGetListApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AuthTokenGetListApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AuthTokenGetListApiRequest' from JSON`,
  );
}
