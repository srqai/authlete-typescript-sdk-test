/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type VciBatchIssueApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  vciBatchIssueRequest: models.VciBatchIssueRequest;
};

/** @internal */
export const VciBatchIssueApiRequest$inboundSchema: z.ZodType<
  VciBatchIssueApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  vci_batch_issue_request: models.VciBatchIssueRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "vci_batch_issue_request": "vciBatchIssueRequest",
  });
});

/** @internal */
export type VciBatchIssueApiRequest$Outbound = {
  serviceId: string;
  vci_batch_issue_request: models.VciBatchIssueRequest$Outbound;
};

/** @internal */
export const VciBatchIssueApiRequest$outboundSchema: z.ZodType<
  VciBatchIssueApiRequest$Outbound,
  z.ZodTypeDef,
  VciBatchIssueApiRequest
> = z.object({
  serviceId: z.string(),
  vciBatchIssueRequest: models.VciBatchIssueRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    vciBatchIssueRequest: "vci_batch_issue_request",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciBatchIssueApiRequest$ {
  /** @deprecated use `VciBatchIssueApiRequest$inboundSchema` instead. */
  export const inboundSchema = VciBatchIssueApiRequest$inboundSchema;
  /** @deprecated use `VciBatchIssueApiRequest$outboundSchema` instead. */
  export const outboundSchema = VciBatchIssueApiRequest$outboundSchema;
  /** @deprecated use `VciBatchIssueApiRequest$Outbound` instead. */
  export type Outbound = VciBatchIssueApiRequest$Outbound;
}

export function vciBatchIssueApiRequestToJSON(
  vciBatchIssueApiRequest: VciBatchIssueApiRequest,
): string {
  return JSON.stringify(
    VciBatchIssueApiRequest$outboundSchema.parse(vciBatchIssueApiRequest),
  );
}

export function vciBatchIssueApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciBatchIssueApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciBatchIssueApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciBatchIssueApiRequest' from JSON`,
  );
}
