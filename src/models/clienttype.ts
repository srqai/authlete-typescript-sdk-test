/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

/**
 * The client type, either `CONFIDENTIAL` or `PUBLIC`. See [RFC 6749, 2.1. Client Types](https://datatracker.ietf.org/doc/html/rfc6749#section-2.1)
 *
 * @remarks
 * for details.
 */
export const ClientType = {
  Public: "PUBLIC",
  Confidential: "CONFIDENTIAL",
} as const;
/**
 * The client type, either `CONFIDENTIAL` or `PUBLIC`. See [RFC 6749, 2.1. Client Types](https://datatracker.ietf.org/doc/html/rfc6749#section-2.1)
 *
 * @remarks
 * for details.
 */
export type ClientType = ClosedEnum<typeof ClientType>;

/** @internal */
export const ClientType$inboundSchema: z.ZodNativeEnum<typeof ClientType> = z
  .nativeEnum(ClientType);

/** @internal */
export const ClientType$outboundSchema: z.ZodNativeEnum<typeof ClientType> =
  ClientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientType$ {
  /** @deprecated use `ClientType$inboundSchema` instead. */
  export const inboundSchema = ClientType$inboundSchema;
  /** @deprecated use `ClientType$outboundSchema` instead. */
  export const outboundSchema = ClientType$outboundSchema;
}
