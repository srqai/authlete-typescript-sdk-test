/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../types/enums.js";

/**
 * The next action that the authorization server implementation should take.
 */
export const AuthorizationResponseAction = {
  InternalServerError: "INTERNAL_SERVER_ERROR",
  BadRequest: "BAD_REQUEST",
  Location: "LOCATION",
  Form: "FORM",
  NoInteraction: "NO_INTERACTION",
  Interaction: "INTERACTION",
} as const;
/**
 * The next action that the authorization server implementation should take.
 */
export type AuthorizationResponseAction = ClosedEnum<
  typeof AuthorizationResponseAction
>;

/** @internal */
export const AuthorizationResponseAction$inboundSchema: z.ZodNativeEnum<
  typeof AuthorizationResponseAction
> = z.nativeEnum(AuthorizationResponseAction);

/** @internal */
export const AuthorizationResponseAction$outboundSchema: z.ZodNativeEnum<
  typeof AuthorizationResponseAction
> = AuthorizationResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthorizationResponseAction$ {
  /** @deprecated use `AuthorizationResponseAction$inboundSchema` instead. */
  export const inboundSchema = AuthorizationResponseAction$inboundSchema;
  /** @deprecated use `AuthorizationResponseAction$outboundSchema` instead. */
  export const outboundSchema = AuthorizationResponseAction$outboundSchema;
}
