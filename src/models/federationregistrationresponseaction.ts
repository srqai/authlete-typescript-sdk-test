/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../types/enums.js";

/**
 * The next action that the authorization server implementation should take.
 */
export const FederationRegistrationResponseAction = {
  Ok: "OK",
  BadRequest: "BAD_REQUEST",
  NotFound: "NOT_FOUND",
  InternalServerError: "INTERNAL_SERVER_ERROR",
} as const;
/**
 * The next action that the authorization server implementation should take.
 */
export type FederationRegistrationResponseAction = ClosedEnum<
  typeof FederationRegistrationResponseAction
>;

/** @internal */
export const FederationRegistrationResponseAction$inboundSchema:
  z.ZodNativeEnum<typeof FederationRegistrationResponseAction> = z.nativeEnum(
    FederationRegistrationResponseAction,
  );

/** @internal */
export const FederationRegistrationResponseAction$outboundSchema:
  z.ZodNativeEnum<typeof FederationRegistrationResponseAction> =
    FederationRegistrationResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FederationRegistrationResponseAction$ {
  /** @deprecated use `FederationRegistrationResponseAction$inboundSchema` instead. */
  export const inboundSchema =
    FederationRegistrationResponseAction$inboundSchema;
  /** @deprecated use `FederationRegistrationResponseAction$outboundSchema` instead. */
  export const outboundSchema =
    FederationRegistrationResponseAction$outboundSchema;
}
