/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type VciJwksRequest = {
  /**
   * The flag indicating whether the metadata is written in the pretty
   *
   * @remarks
   * format or not.
   */
  pretty: boolean;
};

/** @internal */
export const VciJwksRequest$inboundSchema: z.ZodType<
  VciJwksRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pretty: z.boolean(),
});

/** @internal */
export type VciJwksRequest$Outbound = {
  pretty: boolean;
};

/** @internal */
export const VciJwksRequest$outboundSchema: z.ZodType<
  VciJwksRequest$Outbound,
  z.ZodTypeDef,
  VciJwksRequest
> = z.object({
  pretty: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciJwksRequest$ {
  /** @deprecated use `VciJwksRequest$inboundSchema` instead. */
  export const inboundSchema = VciJwksRequest$inboundSchema;
  /** @deprecated use `VciJwksRequest$outboundSchema` instead. */
  export const outboundSchema = VciJwksRequest$outboundSchema;
  /** @deprecated use `VciJwksRequest$Outbound` instead. */
  export type Outbound = VciJwksRequest$Outbound;
}

export function vciJwksRequestToJSON(vciJwksRequest: VciJwksRequest): string {
  return JSON.stringify(VciJwksRequest$outboundSchema.parse(vciJwksRequest));
}

export function vciJwksRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciJwksRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciJwksRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciJwksRequest' from JSON`,
  );
}
