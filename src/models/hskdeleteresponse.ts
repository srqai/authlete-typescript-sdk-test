/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Hsk,
  Hsk$inboundSchema,
  Hsk$Outbound,
  Hsk$outboundSchema,
} from "./hsk.js";

/**
 * Result of the API call
 */
export const HskDeleteResponseAction = {
  Success: "SUCCESS",
  InvalidRequest: "INVALID_REQUEST",
  NotFound: "NOT_FOUND",
  ServerError: "SERVER_ERROR",
} as const;
/**
 * Result of the API call
 */
export type HskDeleteResponseAction = ClosedEnum<
  typeof HskDeleteResponseAction
>;

export type HskDeleteResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * Result of the API call
   */
  action?: HskDeleteResponseAction | undefined;
  /**
   * Holds information about a key managed in an HSM (Hardware Security Module)
   *
   * @remarks
   */
  hsk?: Hsk | undefined;
};

/** @internal */
export const HskDeleteResponseAction$inboundSchema: z.ZodNativeEnum<
  typeof HskDeleteResponseAction
> = z.nativeEnum(HskDeleteResponseAction);

/** @internal */
export const HskDeleteResponseAction$outboundSchema: z.ZodNativeEnum<
  typeof HskDeleteResponseAction
> = HskDeleteResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskDeleteResponseAction$ {
  /** @deprecated use `HskDeleteResponseAction$inboundSchema` instead. */
  export const inboundSchema = HskDeleteResponseAction$inboundSchema;
  /** @deprecated use `HskDeleteResponseAction$outboundSchema` instead. */
  export const outboundSchema = HskDeleteResponseAction$outboundSchema;
}

/** @internal */
export const HskDeleteResponse$inboundSchema: z.ZodType<
  HskDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: HskDeleteResponseAction$inboundSchema.optional(),
  hsk: Hsk$inboundSchema.optional(),
});

/** @internal */
export type HskDeleteResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  hsk?: Hsk$Outbound | undefined;
};

/** @internal */
export const HskDeleteResponse$outboundSchema: z.ZodType<
  HskDeleteResponse$Outbound,
  z.ZodTypeDef,
  HskDeleteResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: HskDeleteResponseAction$outboundSchema.optional(),
  hsk: Hsk$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskDeleteResponse$ {
  /** @deprecated use `HskDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = HskDeleteResponse$inboundSchema;
  /** @deprecated use `HskDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = HskDeleteResponse$outboundSchema;
  /** @deprecated use `HskDeleteResponse$Outbound` instead. */
  export type Outbound = HskDeleteResponse$Outbound;
}

export function hskDeleteResponseToJSON(
  hskDeleteResponse: HskDeleteResponse,
): string {
  return JSON.stringify(
    HskDeleteResponse$outboundSchema.parse(hskDeleteResponse),
  );
}

export function hskDeleteResponseFromJSON(
  jsonString: string,
): SafeParseResult<HskDeleteResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HskDeleteResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HskDeleteResponse' from JSON`,
  );
}
