/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type NativeSsoLogoutRequest = {
  /**
   * The session ID of a user's authentication session.
   *
   * @remarks
   */
  sessionId: string;
};

/** @internal */
export const NativeSsoLogoutRequest$inboundSchema: z.ZodType<
  NativeSsoLogoutRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sessionId: z.string(),
});

/** @internal */
export type NativeSsoLogoutRequest$Outbound = {
  sessionId: string;
};

/** @internal */
export const NativeSsoLogoutRequest$outboundSchema: z.ZodType<
  NativeSsoLogoutRequest$Outbound,
  z.ZodTypeDef,
  NativeSsoLogoutRequest
> = z.object({
  sessionId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NativeSsoLogoutRequest$ {
  /** @deprecated use `NativeSsoLogoutRequest$inboundSchema` instead. */
  export const inboundSchema = NativeSsoLogoutRequest$inboundSchema;
  /** @deprecated use `NativeSsoLogoutRequest$outboundSchema` instead. */
  export const outboundSchema = NativeSsoLogoutRequest$outboundSchema;
  /** @deprecated use `NativeSsoLogoutRequest$Outbound` instead. */
  export type Outbound = NativeSsoLogoutRequest$Outbound;
}

export function nativeSsoLogoutRequestToJSON(
  nativeSsoLogoutRequest: NativeSsoLogoutRequest,
): string {
  return JSON.stringify(
    NativeSsoLogoutRequest$outboundSchema.parse(nativeSsoLogoutRequest),
  );
}

export function nativeSsoLogoutRequestFromJSON(
  jsonString: string,
): SafeParseResult<NativeSsoLogoutRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NativeSsoLogoutRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NativeSsoLogoutRequest' from JSON`,
  );
}
