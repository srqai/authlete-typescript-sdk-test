/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * The next action that the implementation of the token endpoint should take.
 *
 * @remarks
 */
export const NativeSsoResponseAction = {
  Ok: "OK",
  InternalServerError: "INTERNAL_SERVER_ERROR",
  CallerError: "CALLER_ERROR",
} as const;
/**
 * The next action that the implementation of the token endpoint should take.
 *
 * @remarks
 */
export type NativeSsoResponseAction = ClosedEnum<
  typeof NativeSsoResponseAction
>;

export type NativeSsoResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * The next action that the implementation of the token endpoint should take.
   *
   * @remarks
   */
  action?: NativeSsoResponseAction | undefined;
  /**
   * The response content that can be used as the message body of the token response that should be
   *
   * @remarks
   * returned from the token endpoint.
   */
  responseContent?: string | undefined;
  /**
   * The issued ID token.
   *
   * @remarks
   */
  idToken?: string | undefined;
};

/** @internal */
export const NativeSsoResponseAction$inboundSchema: z.ZodNativeEnum<
  typeof NativeSsoResponseAction
> = z.nativeEnum(NativeSsoResponseAction);

/** @internal */
export const NativeSsoResponseAction$outboundSchema: z.ZodNativeEnum<
  typeof NativeSsoResponseAction
> = NativeSsoResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NativeSsoResponseAction$ {
  /** @deprecated use `NativeSsoResponseAction$inboundSchema` instead. */
  export const inboundSchema = NativeSsoResponseAction$inboundSchema;
  /** @deprecated use `NativeSsoResponseAction$outboundSchema` instead. */
  export const outboundSchema = NativeSsoResponseAction$outboundSchema;
}

/** @internal */
export const NativeSsoResponse$inboundSchema: z.ZodType<
  NativeSsoResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: NativeSsoResponseAction$inboundSchema.optional(),
  responseContent: z.string().optional(),
  idToken: z.string().optional(),
});

/** @internal */
export type NativeSsoResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  responseContent?: string | undefined;
  idToken?: string | undefined;
};

/** @internal */
export const NativeSsoResponse$outboundSchema: z.ZodType<
  NativeSsoResponse$Outbound,
  z.ZodTypeDef,
  NativeSsoResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: NativeSsoResponseAction$outboundSchema.optional(),
  responseContent: z.string().optional(),
  idToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NativeSsoResponse$ {
  /** @deprecated use `NativeSsoResponse$inboundSchema` instead. */
  export const inboundSchema = NativeSsoResponse$inboundSchema;
  /** @deprecated use `NativeSsoResponse$outboundSchema` instead. */
  export const outboundSchema = NativeSsoResponse$outboundSchema;
  /** @deprecated use `NativeSsoResponse$Outbound` instead. */
  export type Outbound = NativeSsoResponse$Outbound;
}

export function nativeSsoResponseToJSON(
  nativeSsoResponse: NativeSsoResponse,
): string {
  return JSON.stringify(
    NativeSsoResponse$outboundSchema.parse(nativeSsoResponse),
  );
}

export function nativeSsoResponseFromJSON(
  jsonString: string,
): SafeParseResult<NativeSsoResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NativeSsoResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NativeSsoResponse' from JSON`,
  );
}
